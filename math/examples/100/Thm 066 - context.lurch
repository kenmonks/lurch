
            <div id="loadlink">
                <p><a>Open this file in the Lurch web app</a></p>
                <script language="javascript">
                    const link = document.querySelector( '#loadlink > p > a' )
                    const thisURL = encodeURIComponent( window.location.href )
                    link?.setAttribute( 'href', 'https://dcerra1.github.io/lurchforward/instructor.html?load=' + thisURL )
                </script>
            </div>
        
            <div id="metadata" style="display: none;"><div data-category="settings" data-key="shell style" data-value-type="json">"boxed"</div></div>
            <div id="document"><h2>Thm 066 Context</h2>
<p>In the following rules we <span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;declare +,-, sum, infinity, *,^,=, /&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">declare </span><span class="ML__cmr">+</span><span class="ML__text">, </span><span class="ML__cmr">&minus;</span><span class="ML__text">, sum, </span><span class="ML__cmr">&infin;</span><span class="ML__text">, </span><span class="ML__cmr">&sdot;</span><span class="ML__text">, </span><span class="ML__msubsup"><span class="ML__vlist-t"><span class="ML__vlist-r"><span class="ML__vlist" style="height: 0.81em;"><span style="top: -3.41em; margin-right: 0.05em;"><span style="height: 0.39em; display: inline-block; font-size: 70%;"><span class="ML__cmr">&and;</span></span></span></span></span></span></span><span class="ML__text">, </span><span class="ML__cmr">=</span><span class="ML__text">, </span><span style="color: #000000;"><span class="ML__text">and </span></span><span class="ML__cmr">/</span></span></span></span></span> to be constants.&nbsp;</p>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>EquationsRule</strong>: We allow substitution, symmetry, and transitivity of equality in transitive chains of equations by enabling the <span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;EquationsRule&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">EquationsRule</span></span></span></span></span>.</p>
</div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>Algebra Rule</strong>:&nbsp;We allow identities to be verified by a computer algebra system by enabling the&nbsp;<span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;AlgebraRule&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__text">AlgebraRule</span></span></span></span></span>.</p>
</div>
<p>&nbsp;</p>
<div>
<div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>Splitting Rule</strong></p>
<p style="text-align: center;"><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;sum(@P(k),k,0,infinity)=@P(0)+sum(@P(k),k,1,infinity)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__op-group"><span class="ML__vlist-t ML__vlist-t2"><span class="ML__vlist-r"><span class="ML__vlist" style="height: 1.66em;"><span class="ML__center" style="top: -1.84em;"><span style="height: 0.49em; display: inline-block; font-size: 70%;"><span class="ML__mathit" style="margin-right: 0.04em;">k</span><span class="ML__cmr">=0</span></span></span><span class="ML__center" style="top: -3.05em;"><span style="height: 1.61em; display: inline-block;"><span class="ML__op-symbol ML__large-op">&sum;</span></span></span><span class="ML__center" style="top: -4.3em;"><span style="height: 0.31em; display: inline-block; font-size: 70%;"><span class="ML__cmr">&infin;</span></span></span></span><span class="ML__vlist-s">​</span></span></span></span><span class="ML__cal" style="margin-right: 0.09em;">P</span><span class="ML__left-right" style="margin-top: 0em; height: 0.69444em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.04em;">k</span><span class="ML__small-delim ML__close">)</span></span><span class="ML__cmr">=</span><span class="ML__cal" style="margin-right: 0.09em;">P</span><span class="ML__left-right" style="margin-top: 0em; height: 0.64444em;"><span class="ML__small-delim ML__open">(</span><span class="ML__cmr">0</span><span class="ML__small-delim ML__close">)</span></span><span class="ML__cmr">+</span><span class="ML__op-group"><span class="ML__vlist-t ML__vlist-t2"><span class="ML__vlist-r"><span class="ML__vlist" style="height: 1.66em;"><span class="ML__center" style="top: -1.84em;"><span style="height: 0.49em; display: inline-block; font-size: 70%;"><span class="ML__mathit" style="margin-right: 0.04em;">k</span><span class="ML__cmr">=1</span></span></span><span class="ML__center" style="top: -3.05em;"><span style="height: 1.61em; display: inline-block;"><span class="ML__op-symbol ML__large-op">&sum;</span></span></span><span class="ML__center" style="top: -4.3em;"><span style="height: 0.31em; display: inline-block; font-size: 70%;"><span class="ML__cmr">&infin;</span></span></span></span><span class="ML__vlist-s">​</span></span></span></span><span class="ML__cal" style="margin-right: 0.09em;">P</span><span class="ML__left-right" style="margin-top: 0em; height: 0.69444em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.04em;">k</span><span class="ML__small-delim ML__close">)</span></span></span></span></span></span></p>
</div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>Reindexing Rule</strong></p>
<p style="text-align: center;"><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;sum(@P(k+j),k,0,infinity)=sum(@P(k),k,j,infinity)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__op-group"><span class="ML__vlist-t ML__vlist-t2"><span class="ML__vlist-r"><span class="ML__vlist" style="height: 1.66em;"><span class="ML__center" style="top: -1.84em;"><span style="height: 0.49em; display: inline-block; font-size: 70%;"><span class="ML__mathit" style="margin-right: 0.04em;">k</span><span class="ML__cmr">=0</span></span></span><span class="ML__center" style="top: -3.05em;"><span style="height: 1.61em; display: inline-block;"><span class="ML__op-symbol ML__large-op">&sum;</span></span></span><span class="ML__center" style="top: -4.3em;"><span style="height: 0.31em; display: inline-block; font-size: 70%;"><span class="ML__cmr">&infin;</span></span></span></span><span class="ML__vlist-s">​</span></span></span></span><span class="ML__cal" style="margin-right: 0.09em;">P</span><span class="ML__left-right" style="margin-top: -0.19444em; height: 0.8888799999999999em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.04em;">k</span><span class="ML__cmr">+</span><span class="ML__mathit" style="margin-right: 0.06em;">j</span><span class="ML__small-delim ML__close">)</span></span><span class="ML__cmr">=</span><span class="ML__op-group"><span class="ML__vlist-t ML__vlist-t2"><span class="ML__vlist-r"><span class="ML__vlist" style="height: 1.66em;"><span class="ML__center" style="top: -1.84em;"><span style="height: 0.63em; display: inline-block; font-size: 70%;"><span class="ML__mathit" style="margin-right: 0.04em;">k</span><span class="ML__cmr">=</span><span class="ML__mathit" style="margin-right: 0.06em;">j</span></span></span><span class="ML__center" style="top: -3.05em;"><span style="height: 1.61em; display: inline-block;"><span class="ML__op-symbol ML__large-op">&sum;</span></span></span><span class="ML__center" style="top: -4.3em;"><span style="height: 0.31em; display: inline-block; font-size: 70%;"><span class="ML__cmr">&infin;</span></span></span></span><span class="ML__vlist-s">​</span></span></span></span><span class="ML__cal" style="margin-right: 0.09em;">P</span><span class="ML__left-right" style="margin-top: 0em; height: 0.69444em;"><span class="ML__small-delim ML__open">(</span><span class="ML__mathit" style="margin-right: 0.04em;">k</span><span class="ML__small-delim ML__close">)</span></span></span></span></span></span></p>
</div>
</div>
</div>
<div class="lurch-atom" data-metadata_type="&quot;rule&quot;" data-shell_title="Rule:">
<p><strong>Distributive Property</strong></p>
<p style="text-align: center;"><span class="lurch-atom" contenteditable="false" data-metadata_type="&quot;expression&quot;" data-metadata_lurch-notation="&quot;x*(sum(x^k,k,0,infinity))=sum(x^(k+1),k,0,infinity)&quot;"><span class="lurch-atom-body"><span class="ML__latex"><span class="ML__base"><span class="ML__mathit">x</span><span class="ML__cmr">&sdot;</span><span class="ML__left-right" style="margin-top: -1.302113em; height: 2.9535100000000005em;"><span class="ML__open ML__delim-size4">(</span><span class="ML__op-group"><span class="ML__vlist-t ML__vlist-t2"><span class="ML__vlist-r"><span class="ML__vlist" style="height: 1.66em;"><span class="ML__center" style="top: -1.84em;"><span style="height: 0.49em; display: inline-block; font-size: 70%;"><span class="ML__mathit" style="margin-right: 0.04em;">k</span><span class="ML__cmr">=0</span></span></span><span class="ML__center" style="top: -3.05em;"><span style="height: 1.61em; display: inline-block;"><span class="ML__op-symbol ML__large-op">&sum;</span></span></span><span class="ML__center" style="top: -4.3em;"><span style="height: 0.31em; display: inline-block; font-size: 70%;"><span class="ML__cmr">&infin;</span></span></span></span><span class="ML__vlist-s">​</span></span></span></span><span class="ML__mathit">x</span><span class="ML__msubsup"><span class="ML__vlist-t"><span class="ML__vlist-r"><span class="ML__vlist" style="height: 0.9em;"><span style="top: -3.41em; margin-right: 0.05em;"><span style="height: 0.49em; display: inline-block; font-size: 70%;"><span class="ML__mathit" style="margin-right: 0.04em;">k</span></span></span></span></span></span></span><span class="ML__close ML__delim-size4">)</span></span><span class="ML__cmr">=</span><span class="ML__op-group"><span class="ML__vlist-t ML__vlist-t2"><span class="ML__vlist-r"><span class="ML__vlist" style="height: 1.66em;"><span class="ML__center" style="top: -1.84em;"><span style="height: 0.49em; display: inline-block; font-size: 70%;"><span class="ML__mathit" style="margin-right: 0.04em;">k</span><span class="ML__cmr">=0</span></span></span><span class="ML__center" style="top: -3.05em;"><span style="height: 1.61em; display: inline-block;"><span class="ML__op-symbol ML__large-op">&sum;</span></span></span><span class="ML__center" style="top: -4.3em;"><span style="height: 0.31em; display: inline-block; font-size: 70%;"><span class="ML__cmr">&infin;</span></span></span></span><span class="ML__vlist-s">​</span></span></span></span><span class="ML__mathit">x</span><span class="ML__msubsup"><span class="ML__vlist-t"><span class="ML__vlist-r"><span class="ML__vlist" style="height: 0.9em;"><span style="top: -3.41em; margin-right: 0.05em;"><span style="height: 0.55em; display: inline-block; font-size: 70%;"><span class="ML__mathit" style="margin-right: 0.04em;">k</span><span class="ML__cmr">+1</span></span></span></span></span></span></span></span></span></span></span>&nbsp;</p>
</div>
<p>&nbsp;</p></div>
        